import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import {
  IClassroom,
  IClassroomUpdatePayload,
} from "../../types/classroom.types";

// API slice for managing classrooms
export const classroomApi = createApi({
  reducerPath: "classroomApi", // Unique key for the API slice
  baseQuery: fetchBaseQuery({
    baseUrl: import.meta.env.VITE_APP_API_URL, // Use environment variable for base URL
  }),
  tagTypes: ["Classroom"], // Tag for cache invalidation
  endpoints: (builder) => ({
    // Fetch all classrooms
    getClassrooms: builder.query<IClassroom[], void>({
      query: () => "classrooms",
      providesTags: (result) =>
        result
          ? [
              ...result.map(
                (classroom) =>
                  ({ type: "Classroom", id: classroom.classroomId }) as const
              ),
              { type: "Classroom" as const },
            ]
          : [{ type: "Classroom" as const }],
    }),

    // Fetch a classroom by ID
    getClassroomById: builder.query<IClassroom, number>({
      query: (id) => `classrooms/${id}`,
      providesTags: (result, error, id) => [{ type: "Classroom", id }],
    }),

    // Create a new classroom
    createClassroom: builder.mutation<IClassroom, Partial<IClassroom>>({
      query: (data) => ({
        url: "classrooms",
        method: "POST",
        body: data,
      }),
      invalidatesTags: [{ type: "Classroom" }],
    }),

    // Update an existing classroom
    updateClassroom: builder.mutation<IClassroom, IClassroomUpdatePayload>({
      query: ({ id, data }) => ({
        url: `classrooms/${id}`,
        method: "PUT",
        body: data,
      }),
      invalidatesTags: (result, error, { id }) => [{ type: "Classroom", id }],
    }),

    // Delete a classroom
    deleteClassroom: builder.mutation<void, number>({
      query: (id) => ({
        url: `classrooms/${id}`,
        method: "DELETE",
      }),
      invalidatesTags: (result, error, id) => [{ type: "Classroom", id }],
    }),
  }),
});

// Export hooks generated by the API slice
export const {
  useGetClassroomsQuery,
  useGetClassroomByIdQuery,
  useCreateClassroomMutation,
  useUpdateClassroomMutation,
  useDeleteClassroomMutation,
} = classroomApi;
